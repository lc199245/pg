{"version":3,"sources":["../../src/geo/lng_lat_bounds.ts"],"names":["LngLat","LngLatBounds","input","sw","ne","setSouthWest","setNorthEast","length","lng","lat","convert","obj","sw2","ne2","Array","isArray","every","lngLatBoundsObj","extend","lngLatObj","Math","min","max","getWest","getNorth","getEast","getSouth","toArray","toString","lnglat","containsLatitude","containsLongitude"],"mappings":"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","sourcesContent":["import LngLat, { LngLatLike } from './lng_lat';\nexport type LngLatBoundsLike =\n  | LngLatBounds\n  | [LngLatLike, LngLatLike]\n  | [number, number, number, number];\nexport default class LngLatBounds {\n  public static convert(input: LngLatBoundsLike): LngLatBounds {\n    if (input instanceof LngLatBounds) {\n      return input;\n    }\n    return new LngLatBounds(input);\n  }\n  private ne: LngLat;\n  private sw: LngLat;\n  constructor(sw?: any, ne?: any) {\n    if (!sw) {\n      // noop\n    } else if (ne) {\n      this.setSouthWest(sw).setNorthEast(ne);\n    } else if (sw.length === 4) {\n      this.setSouthWest([sw[0], sw[1]]).setNorthEast([sw[2], sw[3]]);\n    } else {\n      this.setSouthWest(sw[0]).setNorthEast(sw[1]);\n    }\n  }\n\n  public setNorthEast(ne: LngLatLike) {\n    this.ne =\n      ne instanceof LngLat ? new LngLat(ne.lng, ne.lat) : LngLat.convert(ne);\n    return this;\n  }\n  public setSouthWest(sw: LngLatLike) {\n    this.sw =\n      sw instanceof LngLat ? new LngLat(sw.lng, sw.lat) : LngLat.convert(sw);\n    return this;\n  }\n\n  public extend(obj: LngLatLike | LngLatBoundsLike): this {\n    const sw = this.sw;\n    const ne = this.ne;\n    let sw2: any;\n    let ne2: any;\n\n    if (obj instanceof LngLat) {\n      sw2 = obj;\n      ne2 = obj;\n    } else if (obj instanceof LngLatBounds) {\n      sw2 = obj.sw;\n      ne2 = obj.ne;\n\n      if (!sw2 || !ne2) {\n        return this;\n      }\n    } else {\n      if (Array.isArray(obj)) {\n        if (obj.length === 4 || obj.every(Array.isArray)) {\n          const lngLatBoundsObj = obj as LngLatBoundsLike;\n          return this.extend(LngLatBounds.convert(lngLatBoundsObj));\n        } else {\n          const lngLatObj = obj as LngLatLike;\n          return this.extend(LngLat.convert(lngLatObj));\n        }\n      }\n      return this;\n    }\n\n    if (!sw && !ne) {\n      this.sw = new LngLat(sw2.lng, sw2.lat);\n      this.ne = new LngLat(ne2.lng, ne2.lat);\n    } else {\n      sw.lng = Math.min(sw2.lng, sw.lng);\n      sw.lat = Math.min(sw2.lat, sw.lat);\n      ne.lng = Math.max(ne2.lng, ne.lng);\n      ne.lat = Math.max(ne2.lat, ne.lat);\n    }\n\n    return this;\n  }\n  public getCenter(): LngLat {\n    return new LngLat(\n      (this.sw.lng + this.ne.lng) / 2,\n      (this.sw.lat + this.ne.lat) / 2,\n    );\n  }\n\n  public getSouthWest(): LngLat {\n    return this.sw;\n  }\n\n  public getNorthEast(): LngLat {\n    return this.ne;\n  }\n\n  public getNorthWest(): LngLat {\n    return new LngLat(this.getWest(), this.getNorth());\n  }\n\n  public getSouthEast(): LngLat {\n    return new LngLat(this.getEast(), this.getSouth());\n  }\n\n  public getWest(): number {\n    return this.sw.lng;\n  }\n\n  public getSouth(): number {\n    return this.sw.lat;\n  }\n\n  public getEast(): number {\n    return this.ne.lng;\n  }\n\n  public getNorth(): number {\n    return this.ne.lat;\n  }\n\n  public toArray(): [[number, number], [number, number]] {\n    return [this.sw.toArray(), this.ne.toArray()];\n  }\n\n  public toString() {\n    return `LngLatBounds(${this.sw.toString()}, ${this.ne.toString()})`;\n  }\n\n  public isEmpty() {\n    return !(this.sw && this.ne);\n  }\n\n  public contains(lnglat: LngLatLike) {\n    const { lng, lat } = LngLat.convert(lnglat);\n\n    const containsLatitude = this.sw.lat <= lat && lat <= this.ne.lat;\n    let containsLongitude = this.sw.lng <= lng && lng <= this.ne.lng;\n    if (this.sw.lng > this.ne.lng) {\n      // wrapped coordinates\n      containsLongitude = this.sw.lng >= lng && lng >= this.ne.lng;\n    }\n\n    return containsLatitude && containsLongitude;\n  }\n}\n"],"file":"lng_lat_bounds.js"}